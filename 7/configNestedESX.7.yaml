---
- name: Nested ESX storage stuff
  hosts: 127.0.0.1
  connection: local
  gather_facts: no
  vars:
    datacenter_name: "ha-datacenter"
    qnap_target_ip: "192.168.10.8"
    storage_mtu: 9000
    storage_switch: vSwitchStorage
    storage_portgroup: PG-Storage
    storage_vlan: 10
    storage_vnics: vmnic2
    storage_static_target: iqn.2004-04.com.qnap:ts-328:iscsi.vmware.216dca
    nfsdatastore0:
      name: 'datastore-nfs-00'
      path: '/datastore-nfs-00'
      type: 'nfs41'
    nfsdatastore1:
      name: 'datastore-nfs-01'
      path: '/datastore-nfs-01'
      type: 'nfs41'

  tasks: 
    - name: Get creds from vault
      set_fact:
        vcenter_username: "{{ lookup('hashi_vault', 'secret=secret/data/vmware:vcenter_username') }}"
        vcenter_password: "{{ lookup('hashi_vault', 'secret=secret/data/vmware:vcenter_password') }}"
        esxi_username: "{{ lookup('hashi_vault', 'secret=secret/data/vmware:esxi_username') }}"
        esxi_password: "{{ lookup('hashi_vault', 'secret=secret/data/vmware:esxi_password') }}"
        nestedESXiHosts: "{{ lookup('env', 'nestedESXiJSONEncoded') | from_json }}"

    - name: Create Storage vSwitch
      community.vmware.vmware_vswitch:
        hostname: "{{ item.value.fqdn }}"
        username: "{{ esxi_username }}"
        password: "{{ esxi_password }}"
        esxi_hostname: "{{ item.value.fqdn }}"
        validate_certs: no
        switch: "{{ storage_switch }}"
        nics: "{{ storage_vnics }}"
        mtu: "{{ storage_mtu }}"
        state: present
        security:
          promiscuous_mode: True
      loop: "{{ nestedESXiHosts | dict2items }}" 

    - name: Create Storage Portgroup
      community.vmware.vmware_portgroup:
        hostname: "{{ item.value.fqdn }}"
        username: "{{ esxi_username }}"
        password: "{{ esxi_password }}"
        esxi_hostname: "{{ item.value.fqdn }}"
        validate_certs: no
        switch: "{{ storage_switch }}"
        portgroup: "{{ storage_portgroup }}"
        vlan_id: "{{ storage_vlan }}"
        security:
          promiscuous_mode: True
          mac_changes: False
          forged_transmits: False
        teaming:
          load_balancing: failover_explicit
          network_failure_detection: link_status_only
          notify_switches: true
          failback: true
          active_adapters: "{{ storage_vnics }}"
          standby_adapters: null
      loop: "{{ nestedESXiHosts | dict2items }}" 

    - name: Create VMKnic for Storage
      community.vmware.vmware_vmkernel:
        hostname: "{{ item.value.fqdn }}"
        username: "{{ esxi_username }}"
        password: "{{ esxi_password }}"
        esxi_hostname: "{{ item.value.fqdn }}"
        validate_certs: no
        vswitch_name: "{{ storage_switch }}"
        portgroup_name: "{{ storage_portgroup }}"
        network:
          type: 'static'
          ip_address: "{{ item.value['storage-vmk-ip'] }}"
          subnet_mask: 255.255.255.0
        mtu: "{{ storage_mtu }}"
        state: present
      loop: "{{ nestedESXiHosts | dict2items }}"


    - name: Enable iSCSI of ESXi
      community.vmware.vmware_host_iscsi:
        hostname: "{{ item.value.fqdn }}"
        username: "{{ esxi_username }}"
        password: "{{ esxi_password }}"
        esxi_hostname: "{{ item.value.fqdn }}"
        validate_certs: no
        iscsi_config:
          vmhba_name: vmhba65
        state: enabled
      loop: "{{ nestedESXiHosts | dict2items }}"

    - name: Add VMKernels to iSCSI config of ESXi
      community.vmware.vmware_host_iscsi:
        hostname: "{{ item.value.fqdn }}"
        username: "{{ esxi_username }}"
        password: "{{ esxi_password }}"
        esxi_hostname: "{{ item.value.fqdn }}"
        validate_certs: no
        iscsi_config:
          vmhba_name: vmhba65
          port_bind:
            - vmk1
        state: present
      loop: "{{ nestedESXiHosts | dict2items }}"

    - name: Add static iscsi target
      community.vmware.vmware_host_iscsi:
        hostname: "{{ item.value.fqdn }}"
        username: "{{ esxi_username }}"
        password: "{{ esxi_password }}"
        esxi_hostname: "{{ item.value.fqdn }}"
        validate_certs: no
        iscsi_config:
          vmhba_name: vmhba65
          static_target:
            iscsi_name: "{{ storage_static_target }}"
            address: "{{ qnap_target_ip }}"
        state: present
      loop: "{{ nestedESXiHosts | dict2items }}"

    - name: Mount NFS v4.1 datastore0 to ESXi
      community.vmware.vmware_host_datastore:
        hostname: "{{ item.value.fqdn }}"
        username: "{{ esxi_username }}"
        password: "{{ esxi_password }}"
        esxi_hostname: "{{ item.value.fqdn }}"
        validate_certs: no
        nfs_server: '{{ qnap_target_ip }}'
        datastore_type: '{{ nfsdatastore0.type }}'
        datastore_name: '{{ nfsdatastore0.name }}'
        nfs_path: '{{ nfsdatastore0.path }}'
        nfs_ro: no
        state: present
      loop: "{{ nestedESXiHosts | dict2items }}"

    - name: Mount NFS v4.1 datastore1 to ESXi
      community.vmware.vmware_host_datastore:
        hostname: "{{ item.value.fqdn }}"
        username: "{{ esxi_username }}"
        password: "{{ esxi_password }}"
        esxi_hostname: "{{ item.value.fqdn }}"
        validate_certs: no
        nfs_server: '{{ qnap_target_ip }}'
        datastore_type: '{{ nfsdatastore1.type }}'
        datastore_name: '{{ nfsdatastore1.name }}'
        nfs_path: '{{ nfsdatastore1.path }}'
        nfs_ro: no
        state: present
      loop: "{{ nestedESXiHosts | dict2items }}"

    - name: Recan HBA's for a given ESXi host and refresh storage system objects
      community.vmware.vmware_host_scanhba:
        hostname: '{{ item.value.fqdn }}'
        username: '{{ esxi_username }}'
        password: '{{ esxi_password }}'
        esxi_hostname: '{{ item.value.fqdn }}'
        validate_certs: no
        refresh_storage: true
      loop: "{{ nestedESXiHosts | dict2items }}"
    
    - name: Start ssh setting for an ESXi Host with Service policy
      community.vmware.vmware_host_service_manager:
        hostname: '{{ item.value.fqdn }}'
        username: '{{ esxi_username }}'
        password: '{{ esxi_password }}'
        esxi_hostname: '{{ item.value.fqdn }}'
        validate_certs: no
        service_name: TSM-SSH
        service_policy: on
        state: present
      loop: "{{ nestedESXiHosts | dict2items }}"
